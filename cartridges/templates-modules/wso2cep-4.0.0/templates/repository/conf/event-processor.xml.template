<!--
  ~ Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License. You may obtain a copy
  ~ of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed
  ~ under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations under the License.
  -->

<eventProcessorConfiguration>

    <mode name="SingleNode"  enable="{{ CONFIG_PARAM_CEP_SINGLE_NODE }}">
        <persistence enable="false">
            <persistenceIntervalInMinutes>15</persistenceIntervalInMinutes>
            <persisterSchedulerPoolSize>10</persisterSchedulerPoolSize>
            <persister class="org.wso2.carbon.event.processor.core.internal.persistence.FileSystemPersistenceStore">
                <property key="persistenceLocation">cep_persistence</property>
            </persister>
        </persistence>
    </mode>


    <!-- HA Mode Config -->
    <mode name="HA" enable="{{ CONFIG_PARAM_CEP_HA }}">
        <eventSync>
            <hostName>localhost</hostName>
            <port>11224</port>
            <reconnectionInterval>20000</reconnectionInterval>
            <serverThreads>20000</serverThreads>
        </eventSync>
        <management>
            <hostName>localhost</hostName>
            <port>10005</port>
        </management>
    </mode>


    <!-- Distributed Mode Config -->

    <mode name="Distributed" enable="{{ CONFIG_PARAM_CEP_DISTRIBUTED }}">

        <nodeType>
            <worker enable="{{ CONFIG_PARAM_WORKER }}"/>
            <manager enable="{{ CONFIG_PARAM_MANAGER }}">
                {% if CONFIG_PARAM_MANAGER -%}
                <hostName>{{ CONFIG_PARAM_LOCAL_MEMBER_HOST }}</hostName>
                <port>{{ CONFIG_PARAM_LOCAL_MANAGER_PORT }}</port>
                {% else -%}
                <hostName>localhost</hostName>
                <port>8904</port>
                {% endif -%}
            </manager>
        </nodeType>

        <management>
            <managers>
                {% if CONFIG_PARAM_MANAGER_MEMBERS is defined -%}
                {% for key, value in CONFIG_PARAM_MANAGER_MEMBERS.iteritems() -%}
                <manager>
                    <hostName>{{ key }}</hostName>
                    <port>{{ value }}</port>
                </manager>
                {% endfor -%}
                {% endif -%}
            </managers>
            <!--Connection re-try interval to connect to Storm Manager service in case of a connection failure-->
            <reconnectionInterval>20000</reconnectionInterval>
            <!--Heart beat interval (in ms) for event listeners in "Storm Receivers" and "CEP Publishers" to acknowledge their
            availability for receiving events"-->
            <heartbeatInterval>5000</heartbeatInterval>
            <!--Storm topology re-submit interval in case of a topology submission failure-->
            <topologyResubmitInterval>10000</topologyResubmitInterval>
        </management>

        <transport>
            <!--Port range to be used for events listener servers in "Storm Receiver Spouts" and "CEP Publishers"-->
            <portRange>
                <min>15000</min>
                <max>15100</max>
            </portRange>
            <!--Connection re-try interval (in ms) for connection failures between "CEP Receiver" to "Storm Receiver" connection
            and "Storm Publisher" to "CEP Publisher" connection-->
            <reconnectionInterval>20000</reconnectionInterval>
            <!--Size of the output queue of each "CEP Receiver" which stores events to be published into "Storm Receivers" .
            This must be a power of two-->
            <cepReceiverOutputQueueSize>8192</cepReceiverOutputQueueSize>
            <!--Size of the output queue of each "Storm Publisher" which stores events to be published into "CEP Publisher" .
           This must be a power of two-->
            <stormPublisherOutputQueueSize>8192</stormPublisherOutputQueueSize>
            <!--blocking/non-blocking-->
            <tcpEventPublisherMode>blocking</tcpEventPublisherMode>
            <!--Must be a power of two. Only used when tcpEventPublisherMode is non-blocking-->
            <tcpEventPublisherOutputQueueSize>8192</tcpEventPublisherOutputQueueSize>
            <!--Size of TCP event publishing client's send buffer in bytes-->
            <tcpEventPublisherSendBufferSize>5242880</tcpEventPublisherSendBufferSize>
            <!--Character encoding of TCP event publishing client-->
            <tcpEventPublisherCharSet>UTF-8</tcpEventPublisherCharSet>
            <!--Number of threads to be used by event receiving servers in "Storm Receivers" and "CEP Publishers"-->
            <tcpEventReceiverThreadCount>10</tcpEventReceiverThreadCount>
        </transport>

        <stormJar>org.wso2.cep.storm.dependencies.jar</stormJar>

        <distributedUIUrl></distributedUIUrl>

    </mode>
</eventProcessorConfiguration>

